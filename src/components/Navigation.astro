---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import { languages } from '../i18n/ui';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Get current path without language prefix
const currentPath = Astro.url.pathname.replace(/^\/(es|ca)/, '') || '/';
---

<nav>
	<div class="max-w-7xl mx-auto px-4 md:px-16">
		<div class="flex items-center justify-between h-[73px]">
			<!-- Logo -->
			<div class="flex items-center h-[43px]">
				<a href={lang === 'es' ? '/' : '/ca/'}>
					<img src="/icons/coop_internacional_dark.svg" alt={t('nav.logo.alt')} class="h-full w-auto object-contain" />
				</a>
			</div>
			
			<!-- Language Selector -->
			<div class="relative language-selector">
				<button class="language-btn cursor-pointer flex items-center gap-2 px-4 py-2 text-base hover:bg-black/5 rounded-lg transition-colors font-medium">
					<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"/>
					</svg>
					<span>{lang.toUpperCase()}</span>
					<svg class="language-chevron w-3 h-3 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
					</svg>
				</button>
				
				<!-- Dropdown -->
				<div class="language-dropdown absolute right-0 top-full pt-2 opacity-0 invisible transition-all duration-200 z-50">
					<div class="w-36 bg-white rounded-lg shadow-lg border border-gray-200 overflow-hidden">
						{Object.entries(languages).map(([code, name]) => (
							code === lang ? (
								<div class="px-4 py-2.5 text-sm font-semibold bg-gray-100 text-black cursor-default">
									{name}
								</div>
							) : (
								<a
									href={code === 'es' ? currentPath : `/ca${currentPath}`}
									class="block px-4 py-2.5 text-sm text-black hover:bg-gray-50 transition-colors"
								>
									{name}
								</a>
							)
						))}
					</div>
				</div>
			</div>
		</div>
	</div>
</nav>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const selectors = document.querySelectorAll(".language-selector");

		selectors.forEach((selector) => {
			const btn = selector.querySelector(".language-btn");
			const dropdown = selector.querySelector(".language-dropdown");
			const chevron = selector.querySelector(".language-chevron");

			btn?.addEventListener("click", () => {
				const isOpen = dropdown?.classList.contains("opacity-100");
				
				if (isOpen) {
					dropdown?.classList.remove("opacity-100", "visible");
					dropdown?.classList.add("opacity-0", "invisible");
					chevron?.classList.remove("rotate-180");
				} else {
					dropdown?.classList.add("opacity-100", "visible");
					dropdown?.classList.remove("opacity-0", "invisible");
					chevron?.classList.add("rotate-180");
				}
			});

			// Close dropdown when clicking outside
			document.addEventListener("click", (e) => {
				if (!selector.contains(e.target as Node)) {
					dropdown?.classList.remove("opacity-100", "visible");
					dropdown?.classList.add("opacity-0", "invisible");
					chevron?.classList.remove("rotate-180");
				}
			});
		});
	});
</script>

